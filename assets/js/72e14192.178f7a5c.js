"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[239],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=d(n),c=i,f=p["".concat(s,".").concat(c)]||p[c]||m[c]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3763:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return te},default:function(){return oe},frontMatter:function(){return ee},metadata:function(){return ne},toc:function(){return re}});var r,i,o,l,a,s,d,u,m,p,c,f,h,b,g,y=n(7462),k=n(3366),v=n(7294),w=n(3905),x=["title","titleId"];function E(){return(E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function M(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var N,P,S,O,z,_,j,q,R,A,T,W,F,C,I,D,H,L,G,Q,U,X,Z,B=function(e){var t=e.title,n=e.titleId,y=M(e,x);return v.createElement("svg",E({xmlns:"http://www.w3.org/2000/svg",width:1139,height:204,viewBox:"-0.5 -0.5 1139 204","aria-labelledby":n},y),t?v.createElement("title",{id:n},t):null,r||(r=v.createElement("defs",null,v.createElement("style",null,"@import url(https://fonts.googleapis.com/css?family=Roboto);"))),i||(i=v.createElement("path",{d:"M436.1 106.32v-10h163.5v-11l32.5 16-32.5 16v-11zM748.98 106.32v-10h163.5v-11l32.5 16-32.5 16v-11z",fill:"#1a1a1a",stroke:"#e6e6e6",strokeWidth:4,strokeLinejoin:"round",strokeMiterlimit:10,pointerEvents:"all"})),o||(o=v.createElement("path",{d:"M926.5 52h180l20 50-20 50h-180l20-50z",fill:"#d5e8d4",stroke:"#82b366",strokeWidth:4,strokeMiterlimit:10,pointerEvents:"all"})),l||(l=v.createElement("text",{x:1026,y:119.5,fontFamily:"Roboto",fontWeight:"bold",textAnchor:"middle",fontSize:40},"output")),a||(a=v.createElement("path",{fill:"#fff2cc",stroke:"#d6b656",strokeWidth:4,pointerEvents:"none",d:"M632.98 12h200v180h-200z"})),s||(s=v.createElement("text",{x:732.48,y:71.5,fontFamily:"Roboto",fontWeight:"bold",pointerEvents:"none",textAnchor:"middle",fontSize:40},"Module")),d||(d=v.createElement("text",{x:732.49,y:133.5,fontFamily:"Roboto",fontStyle:"italic",pointerEvents:"none",textAnchor:"middle",fontSize:30},"raising")),u||(u=v.createElement("text",{x:731.47,y:164.5,fontFamily:"Roboto",fontStyle:"italic",pointerEvents:"none",textAnchor:"middle",fontSize:30},"to power")),m||(m=v.createElement("path",{fill:"#fff2cc",stroke:"#d6b656",strokeWidth:4,pointerEvents:"none",d:"M321.52 12h200v180h-200z"})),p||(p=v.createElement("text",{x:421.02,y:71.5,fontFamily:"Roboto",fontWeight:"bold",pointerEvents:"none",textAnchor:"middle",fontSize:40},"Module")),c||(c=v.createElement("text",{x:421.03,y:133.5,fontFamily:"Roboto",fontStyle:"italic",pointerEvents:"none",textAnchor:"middle",fontSize:30},"adding")),f||(f=v.createElement("text",{x:419.39,y:164.5,fontFamily:"Roboto",fontStyle:"italic",pointerEvents:"none",textAnchor:"middle",fontSize:30},"numbers")),h||(h=v.createElement("path",{d:"M123.52 106.42v-10h163.5v-11l32.5 16-32.5 16v-11z",fill:"#1a1a1a",stroke:"#e6e6e6",strokeWidth:4,strokeLinejoin:"round",strokeMiterlimit:10,pointerEvents:"none"})),b||(b=v.createElement("path",{d:"M12 52h182.5l17.5 50-17.5 50H12l17.5-50z",fill:"#dae8fc",stroke:"#6c8ebf",strokeWidth:4,strokeMiterlimit:10,pointerEvents:"none"})),g||(g=v.createElement("text",{x:111.5,y:119.5,fontFamily:"Roboto",fontWeight:"bold",pointerEvents:"none",textAnchor:"middle",fontSize:40},"input")))},Y=["title","titleId"];function V(){return(V=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function J(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var K=function(e){var t=e.title,n=e.titleId,r=J(e,Y);return v.createElement("svg",V({xmlns:"http://www.w3.org/2000/svg",width:1099,height:204,viewBox:"-0.5 -0.5 1099 204","aria-labelledby":n},r),t?v.createElement("title",{id:n},t):null,N||(N=v.createElement("defs",null,v.createElement("style",null,"@import url(https://fonts.googleapis.com/css?family=Roboto);"))),P||(P=v.createElement("path",{d:"M441.02 106.82v-10H650.5v-11l32.5 16-32.5 16v-11zM754.98 106.32v-10h209.48v-11l32.5 16-32.5 16v-11z",fill:"#1a1a1a",stroke:"#e6e6e6",strokeWidth:4,strokeLinejoin:"round",strokeMiterlimit:10,pointerEvents:"all"})),S||(S=v.createElement("path",{fill:"#fff2cc",stroke:"#d6b656",strokeWidth:4,pointerEvents:"all",d:"M282.26 12h200v180h-200z"})),O||(O=v.createElement("circle",{cx:1041.98,cy:102.5,fill:"#d5e8d4",stroke:"#82b366",strokeWidth:4,pointerEvents:"all",r:45})),z||(z=v.createElement("text",{x:1041.48,y:120,fontFamily:"Roboto",textAnchor:"middle",fontSize:40},"36")),_||(_=v.createElement("path",{fill:"#fff2cc",stroke:"#d6b656",strokeWidth:4,pointerEvents:"all",d:"M685 12h200v180H685z"})),j||(j=v.createElement("path",{fill:"#fff2cc",stroke:"#d6b656",strokeWidth:4,pointerEvents:"all",d:"M685 12h200v60H685z"})),q||(q=v.createElement("path",{d:"M705 12v60m160-60v60",fill:"none",stroke:"#d6b656",strokeWidth:4,strokeMiterlimit:10,pointerEvents:"all"})),R||(R=v.createElement("text",{x:784.5,y:55.5,fontFamily:"Roboto",fontWeight:"bold",textAnchor:"middle",fontSize:32},"power: 2")),A||(A=v.createElement("circle",{cx:773,cy:125.24,fill:"#e1d5e7",stroke:"#9673a6",strokeWidth:4,pointerEvents:"all",r:40})),T||(T=v.createElement("text",{x:772.5,y:142.74,fontFamily:"Roboto",textAnchor:"middle",fontSize:40},"6")),W||(W=v.createElement("circle",{cx:792.98,cy:132.5,fill:"#e1d5e7",stroke:"#9673a6",strokeWidth:4,pointerEvents:"all",r:40})),F||(F=v.createElement("text",{x:792.48,y:150,fontFamily:"Roboto",textAnchor:"middle",fontSize:40},"6")),C||(C=v.createElement("circle",{cx:577.72,cy:102,fill:"#e1d5e7",stroke:"#9673a6",strokeWidth:4,pointerEvents:"all",r:40})),I||(I=v.createElement("text",{x:577.22,y:119.5,fontFamily:"Roboto",textAnchor:"middle",fontSize:40},"6")),D||(D=v.createElement("rect",{x:327.52,y:80.24,width:106.58,height:86.76,rx:13.01,ry:13.01,fill:"#e1d5e7",stroke:"#9673a6",strokeWidth:4,pointerEvents:"all"})),H||(H=v.createElement("path",{fill:"none",pointerEvents:"all",d:"M342.52 85.24h76.58V162h-76.58z"})),L||(L=v.createElement("text",{x:380.31,y:141.12,fontFamily:"Roboto",fontWeight:"bold",textAnchor:"middle",fontSize:40},"\u03a3")),G||(G=v.createElement("path",{fill:"none",pointerEvents:"all",d:"M290.62 18h180.4v54.5h-180.4z"})),Q||(Q=v.createElement("text",{x:380.32,y:57.75,fontFamily:"Roboto",fontStyle:"italic",textAnchor:"middle",fontSize:30},"sum")),U||(U=v.createElement("path",{d:"M84.26 106.92v-10h163.5v-11l32.5 16-32.5 16v-11z",fill:"#1a1a1a",stroke:"#e6e6e6",strokeWidth:4,strokeLinejoin:"round",strokeMiterlimit:10,pointerEvents:"all"})),X||(X=v.createElement("rect",{x:12,y:55.24,width:160,height:86.76,rx:13.01,ry:13.01,fill:"#dae8fc",stroke:"#6c8ebf",strokeWidth:4,pointerEvents:"all"})),Z||(Z=v.createElement("text",{x:91.5,y:116.12,fontFamily:"Roboto",textAnchor:"middle",fontSize:40},"1,2,3")))},$=["components"],ee={sidebar_position:2},te="Quick Start \u23f1\ufe0f",ne={unversionedId:"quick-start",id:"quick-start",isDocsHomePage:!1,title:"Quick Start \u23f1\ufe0f",description:"Installation",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/magda/docs/next/quick-start",editUrl:"https://github.com/NeuroSYS-pl/magda/edit/main/web/docs/quick-start.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What is MAGDA?",permalink:"/magda/docs/next/home"},next:{title:"General outlook",permalink:"/magda/docs/next/modules/module"}},re=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"1. The simplest <code>SequentialPipeline</code>",id:"1-the-simplest-sequentialpipeline",children:[]},{value:"2. <code>SequentialPipeline</code> with Interfaces",id:"2-sequentialpipeline-with-interfaces",children:[]},{value:"3. <code>SequentialPipeline</code> built from a config file",id:"3-sequentialpipeline-built-from-a-config-file",children:[]}]}],ie={toc:re};function oe(e){var t=e.components,n=(0,k.Z)(e,$);return(0,w.kt)("wrapper",(0,y.Z)({},ie,n,{components:t,mdxType:"MDXLayout"}),(0,w.kt)("h1",{id:"quick-start-\ufe0f"},"Quick Start \u23f1\ufe0f"),(0,w.kt)("h2",{id:"installation"},"Installation"),(0,w.kt)("h6",{id:"pip"},"pip"),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-bash"},"pip install magda\n")),(0,w.kt)("h6",{id:"from-the-repository-next-version"},"From the repository (next version)"),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-bash"},"pip install https://github.com/NeuroSYS-pl/magda/archive/refs/heads/main.zip\n")),(0,w.kt)("h2",{id:"usage"},"Usage"),(0,w.kt)("p",null,"Having installed ",(0,w.kt)("em",{parentName:"p"},"MAGDA"),", a simplistic pipeline can be created with just a few lines of code."),(0,w.kt)(B,{className:"diagram",width:"50%",mdxType:"SchemaSvg"}),(0,w.kt)("p",null,"The above pipeline is composed of just 2 modules. The first one sums all numbers from a given list and outputs a single number. And the second module raises that number to a given power."),(0,w.kt)("p",null,"There can be implemented ",(0,w.kt)("strong",{parentName:"p"},"several approaches to building the same pipeline"),". "),(0,w.kt)("h3",{id:"1-the-simplest-sequentialpipeline"},"1. The simplest ",(0,w.kt)("inlineCode",{parentName:"h3"},"SequentialPipeline")),(0,w.kt)("p",null,"Every pipeline consists of a couple of steps:"),(0,w.kt)("ol",null,(0,w.kt)("li",{parentName:"ol"},"Class definition - defining each ",(0,w.kt)("inlineCode",{parentName:"li"},"Module")," (and ",(0,w.kt)("inlineCode",{parentName:"li"},"Interface"),")"),(0,w.kt)("li",{parentName:"ol"},"Module initialization - getting every ",(0,w.kt)("inlineCode",{parentName:"li"},"Module")," instance, defining its dependencies and parameters"),(0,w.kt)("li",{parentName:"ol"},"Pipeline creation - defining a pipeline and adding ",(0,w.kt)("inlineCode",{parentName:"li"},"Modules")," to it"),(0,w.kt)("li",{parentName:"ol"},"Pipeline build"),(0,w.kt)("li",{parentName:"ol"},"Pipeline run")),(0,w.kt)(K,{className:"diagram",width:"50%",mdxType:"PipelineSvg"}),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="main.py"',title:'"main.py"'},"import asyncio\nfrom magda.module import Module\nfrom magda.decorators import accept, finalize, expose\nfrom magda.pipeline import SequentialPipeline\n\n\n@finalize\nclass AddingNumbersModule(Module.Runtime):\n    def run(self, data, request):\n        return sum(request)\n\n@accept(AddingNumbersModule)\n@expose()\n@finalize\nclass RaisingToPowerModule(Module.Runtime):\n    def run(self, data, **kwargs):\n        number = data.get(AddingNumbersModule)\n        return number ** self.parameters['power']\n\n\nsum_module = AddingNumbersModule('module_sum')\npower_module = RaisingToPowerModule('module_power')\npower_module.depends_on(sum_module)\npower_module.set_parameters({'power': 2})\n\nbuilder = SequentialPipeline()\nbuilder.add_module(sum_module)\nbuilder.add_module(power_module)\n\nruntime = asyncio.run(builder.build())\nresult = asyncio.run(runtime.run(request=[1, 2, 3]))\nprint(result['module_power'])\n# output: 36\n")),(0,w.kt)("h3",{id:"2-sequentialpipeline-with-interfaces"},"2. ",(0,w.kt)("inlineCode",{parentName:"h3"},"SequentialPipeline")," with Interfaces"),(0,w.kt)("p",null,(0,w.kt)("em",{parentName:"p"},"MAGDA")," Interfaces are just classes encapsulating data passed between modules. However, it's recommended to use them as they straighten the code up, providing more clarity and flexibility. "),(0,w.kt)("p",null,"The above code can be rewritten as follows:"),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="main.py"',title:'"main.py"'},"import asyncio\nfrom dataclasses import dataclass\nfrom magda.module import Module\nfrom magda.decorators import accept, produce, finalize, expose\nfrom magda.pipeline import SequentialPipeline\n\n\n@dataclass\nclass Number(Module.Interface):\n    value: int\n\n@dataclass\nclass Power(Module.Interface):\n    number: int\n    power: int = 1\n\n\n@produce(Number)\n@finalize\nclass AddingNumbersModule(Module.Runtime):\n    def run(self, data, request):\n        return Number(sum(request))\n\n@accept(Number)\n@produce(Power)\n@expose()\n@finalize\nclass RaisingToPowerModule(Module.Runtime):\n    def run(self, data, **kwargs):\n        number = data.get(Number).value\n        power = self.parameters['power']\n        return Power(number ** power, power=power)\n\n\nsum_module = AddingNumbersModule('module_sum')\npower_module = RaisingToPowerModule('module_power')\npower_module.depends_on(sum_module)\npower_module.set_parameters({'power': 2})\n\nbuilder = SequentialPipeline()\nbuilder.add_module(sum_module)\nbuilder.add_module(power_module)\n\nruntime = asyncio.run(builder.build())\nresult = asyncio.run(runtime.run(request=[1, 2, 3]))\nprint(result['module_power'])\n# output: Power(number=36, power=2)\n")),(0,w.kt)("h3",{id:"3-sequentialpipeline-built-from-a-config-file"},"3. ",(0,w.kt)("inlineCode",{parentName:"h3"},"SequentialPipeline")," built from a config file"),(0,w.kt)("p",null,"It's also recommended to use configs - ",(0,w.kt)("inlineCode",{parentName:"p"},"yaml")," files that enable to define a pipeline easily. The ",(0,w.kt)("em",{parentName:"p"},"Pipeline creation")," and ",(0,w.kt)("em",{parentName:"p"},"Pipeline build")," steps are now replaced by registering ",(0,w.kt)("inlineCode",{parentName:"p"},"Modules")," in the ",(0,w.kt)("inlineCode",{parentName:"p"},"ModuleFactory")," and reading the pipeline from a configuration file.  "),(0,w.kt)("p",null,"The same pipeline as before can be obtained using the below config:"),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="my_config_file.yaml"',title:'"my_config_file.yaml"'},"modules:\n  - name: module_sum\n    type: adding-numbers-module\n  - name: module_power\n    type: raising-to-power-module\n    depends_on:\n      - module_sum\n    parameters:\n      power: 2\n")),(0,w.kt)("pre",null,(0,w.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="main.py"',title:'"main.py"'},"import asyncio\nfrom dataclasses import dataclass\nfrom magda.module import Module\nfrom magda.decorators import accept, produce, finalize, expose\nfrom magda.pipeline import SequentialPipeline\nfrom magda.module.factory import ModuleFactory\nfrom magda.config_reader import ConfigReader\n\n\n@dataclass\nclass Number(Module.Interface):\n    value: int\n\n@dataclass\nclass Power(Module.Interface):\n    number: int\n    power: int = 1\n\n\n@produce(Number)\n@finalize\nclass AddingNumbersModule(Module.Runtime):\n    def run(self, data, request):\n        return Number(sum(request))\n\n@accept(Number)\n@produce(Power)\n@expose()\n@finalize\nclass RaisingToPowerModule(Module.Runtime):\n    def run(self, data, **kwargs):\n        number = data.get(Number).value\n        power = self.parameters['power']\n        return Power(number ** power, power=power)\n\n\nModuleFactory.register('adding-numbers-module', AddingNumbersModule)\nModuleFactory.register('raising-to-power-module', RaisingToPowerModule)\n\nwith open('my_config_file.yaml') as file:\n    config = file.read()\n    runtime = asyncio.run(ConfigReader.read(config, ModuleFactory))\n\nresult = asyncio.run(runtime.run(request=[1, 2, 3]))\nprint(result['module_power'])\n# output: Power(number=36, power=2)\n")))}oe.isMDXComponent=!0}}]);